go.property("health", 100)
go.property("invulPeriod", 2)

require "modules.common"

local function InvulTimerCallback(self, handle, time_elapsed)
	self.vulnerable = true
end

function init(self)
	self.vulnerable = true
	self.invul_timer = timer.INVALID_TIMER_HANDLE
end

function on_message(self, message_id, message, sender)
	if message_id == hash("damage") and self.vulnerable then
		msg.post(".", msgtype_trigger, { id = trigger_damage })
		self.health = self.health - message.damage
		if self.health <= 0 then
			self.health = 0
			msg.post(".", msgtype_tag, { id = tag_dead, value = true })
		else
			self.vulnerable = false
			self.invul_timer = timer.delay(self.invulPeriod, false, InvulTimerCallback)
		end
	elseif message_id == msgtype_check_tag then
		if message.id == tag_dead then
			assert(self.health >= 0)
			msg.post(sender, msgtype_tag, { id = tag_dead, value = (self.health == 0) })
		end
	elseif message_id == hash("gethp") then
		msg.post(sender, hash("ongethp"), { hp = self.health })
	end
end